{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["itemsFromBackend","id","uuid","content","name","src","columnsFromBackend","items","App","useState","columns","setColumns","style","display","justifyContent","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","Object","entries","map","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","fontSize","paddingTop","fontWeight","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.483b50e9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\n\nconst itemsFromBackend = [\n  { id: uuid(), content: \"First task\", name: \"Sam James\", src: \"https://i.ibb.co/LpN2Zz1/img1.webp\"},\n  { id: uuid(), content: \"Second task\", name: \"James Husky\", src: \"https://i.ibb.co/9Nb4shS/img2.png\" },\n  { id: uuid(), content: \"Third task\", name: \"Ronland Tiff\", src: \"https://i.ibb.co/86RgYz1/img3.png\" },\n  { id: uuid(), content: \"Fourth task\", name: \"Nicole Ann\",  src: \"https://i.ibb.co/yYgsbW1/img4.png\" },\n  { id: uuid(), content: \"Fifth task\", name: \"Dann Kim\", src: \"https://i.ibb.co/G5B7XhM/img5.png\"},\n  { id: uuid(), content: \"Sixth task\", name: \"Vlad Suravov\", src: \"https://i.ibb.co/DbrtqLv/img6.webp\" },\n  { id: uuid(), content: \"Seventh task\", name: \"Nick Tito\", src: \"https://i.ibb.co/cJbqJ1x/img7.webp\" },\n  \n];\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Requested\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"To do\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"In Review\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Done\",\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div> \n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <DragDropContext\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}key={columnId}>\n              <h1>{column.name}</h1>\n              <div style={{ margin: 10 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightgreen\"\n                            : \"lightgrey\",\n                          padding: 4,\n                          width: 250,\n                          minHeight: 500\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#99d3f2\"\n                                        : \"#456C86\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style,\n                                      fontSize: \"26px\"\n                                    }}\n                                  >\n                                    {item.content }\n\n                                     \n                                        <br />\n                                        <br />\n                                    <img src={item.src} width=\"50\" height=\"50\"/>\n                                   <div\n                                      style={{\n                                        color: \"#fce89d\",\n                                        paddingTop: \"20px\",\n                                        fontSize: \"20px\",\n                                        fontWeight: \"bold\",\n                                      }}>\n                                       {\"name: \"} {item.name}\n\n                                      </div>\n\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n\n    </div>\n  \n        \n        \n        \n    </div>\n\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}